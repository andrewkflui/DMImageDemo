/***************************************************************
 *
 * Interactive Demo: Digital Image Properties and Processing
 * Copyright (c) 2006 Dr. Andrew Kwok-Fai LUI
 * The Open University of Hong Kong
 *
 * Enhance the learning effectiveness of students through greater interactions
 */
/*  This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
package faifai.image;

import javax.swing.JDialog;
import javax.swing.JFrame;

public class ContrastPanel extends javax.swing.JPanel {
  
  private int brightness = 0;
  private double contrast = 1.0;
  
  private JDialog dialog = null;
  private JFrame frame;
  
  /** Creates new form ContrastPanel */
  public ContrastPanel() {
    initComponents();
  }
  
  public void showDialog() {
    if (dialog == null) {
      frame = new JFrame();
      dialog = new JDialog(frame, true);
      dialog.getContentPane().add(this);
      dialog.setSize(320, 160);
      dialog.setTitle("Histogram");
    } else {
      
    }
    dialog.setVisible(true);
  }
  
  public int getBrightness() {
    return this.brightness;
  }
  
  public double getContrast() {
    return this.contrast;
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    jSlider1 = new javax.swing.JSlider();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jSlider2 = new javax.swing.JSlider();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jButton1 = new javax.swing.JButton();

    setLayout(new java.awt.GridBagLayout());

    jSlider1.setMaximum(128);
    jSlider1.setMinimum(-128);
    jSlider1.setValue(0);
    jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        jSlider1StateChanged(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    add(jSlider1, gridBagConstraints);

    jLabel1.setFont(new java.awt.Font("Arial", 0, 9));
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel1.setText("Brightness");
    jLabel1.setMaximumSize(new java.awt.Dimension(60, 25));
    jLabel1.setMinimumSize(new java.awt.Dimension(60, 25));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    add(jLabel1, gridBagConstraints);

    jLabel2.setFont(new java.awt.Font("Arial", 0, 9));
    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel2.setText("Contrast");
    jLabel2.setMaximumSize(new java.awt.Dimension(60, 25));
    jLabel2.setMinimumSize(new java.awt.Dimension(60, 25));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    add(jLabel2, gridBagConstraints);

    jSlider2.setPaintLabels(true);
    jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        jSlider2StateChanged(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    add(jSlider2, gridBagConstraints);

    jLabel3.setFont(new java.awt.Font("Arial", 0, 9));
    jLabel3.setMaximumSize(new java.awt.Dimension(60, 25));
    jLabel3.setMinimumSize(new java.awt.Dimension(60, 25));
    jLabel3.setPreferredSize(new java.awt.Dimension(60, 25));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    add(jLabel3, gridBagConstraints);

    jLabel4.setFont(new java.awt.Font("Arial", 0, 9));
    jLabel4.setMaximumSize(new java.awt.Dimension(60, 25));
    jLabel4.setMinimumSize(new java.awt.Dimension(60, 25));
    jLabel4.setPreferredSize(new java.awt.Dimension(60, 25));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    add(jLabel4, gridBagConstraints);

    jButton1.setFont(new java.awt.Font("Arial", 0, 9));
    jButton1.setText("Confirm");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        confirmActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    add(jButton1, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

  private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
    dialog.setVisible(false);    
  }//GEN-LAST:event_confirmActionPerformed

  private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
    int value = jSlider2.getValue();
    contrast = (value + 0.1) / 50.0;
    jLabel4.setText(contrast + "");    
  }//GEN-LAST:event_jSlider2StateChanged

  private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
    brightness = jSlider1.getValue();
    jLabel3.setText(brightness + "");
  }//GEN-LAST:event_jSlider1StateChanged
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JSlider jSlider1;
  private javax.swing.JSlider jSlider2;
  // End of variables declaration//GEN-END:variables
  
}

/***************************************************************
 *
 * Interactive Demo: Digital Image Properties and Processing
 * Copyright (c) 2006 Dr. Andrew Kwok-Fai LUI
 * The Open University of Hong Kong
 *
 * Enhance the learning effectiveness of students through greater interactions
 */
/*  This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
import java.util.*;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

public class ApplicationLauncher extends javax.swing.JFrame {

  private ResourceBundle resource = null;
  private Hashtable<String, String> componentTable = new Hashtable<String, String>();

  /** Creates new form ApplicationLauncher */
  public ApplicationLauncher() {
    this("launcher");
  }

  public ApplicationLauncher(String name) {
    String toLaunch = null;
    printClassPath();
    try {
      resource = ResourceBundle.getBundle(name, Locale.ROOT);
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(this, "Launcher: Properties File Not Found\n" + ex);
      System.exit(1);
    }
    try {
      toLaunch = resource.getString("launcher.launch");
    } catch (Exception ex) {
    }
    try {
        javax.swing.UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
    } catch (Exception ex) {
    }
    if (toLaunch != null) {
      try {
        final Class launchClass = Class.forName(toLaunch);
        JFrame frame = (JFrame) launchClass.newInstance();
        frame.pack();
        frame.setVisible(true);
        return;
      } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Launcher: Class not found\n" + toLaunch);
        System.exit(1);
      }
    }
    initLauncherMenu();
    this.setTitle("Application Launcher");
    this.pack();
    this.setVisible(true);
  }

  private void printClassPath() {
    System.err.println("CLASSPATH = \n" + System.getProperty("java.class.path"));
  }

  private void initLauncherMenu() {
    initComponents();
    int index = 1;
    String name;
    String className;
    while (true) {
      try {
        name = resource.getString("launcher.component." + index);
        className = resource.getString("launcher.component." + index + ".class");
        addButton(name);
        componentTable.put(name, className);
        index++;
      } catch (Exception ex) {
        break;
      }
    }
    if (index == 1) {
      JOptionPane.showMessageDialog(this, "Launcher: No Selection Specified");
      System.exit(1);
    }
  }

  private void addButton(String name) {
    JButton jButton1 = new javax.swing.JButton();
    jButton1.setText(name);
    jButton1.setPreferredSize(new java.awt.Dimension(200, 25));

    jButton1.setBackground(new java.awt.Color(0, 0, 0));
    jButton1.setOpaque(true);
    jButton1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
    jButton1.setForeground(new java.awt.Color(255, 255, 255));
    jButton1.setMargin(new java.awt.Insets(2, 5, 2, 5));
    jButton1.setHorizontalAlignment(SwingConstants.LEFT);
    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/YellowSquare.jpg")));
    jButton1.addActionListener(new java.awt.event.ActionListener() {

      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    getContentPane().add(jButton1);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    private void initComponents() {//GEN-BEGIN:initComponents

        getContentPane().setLayout(new java.awt.GridLayout(0, 1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        pack();
    }//GEN-END:initComponents

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
    JButton button = (JButton) evt.getSource();
    String text = button.getText();
    String toLaunch = (String) componentTable.get(text);
    try {
      final Class launchClass = Class.forName(toLaunch);
      JFrame frame = (JFrame) launchClass.newInstance();
      frame.pack();
      frame.setVisible(true);
      String hidemenu = resource.getString("launcher.hidemenu");
      if (hidemenu == null || hidemenu.equalsIgnoreCase("true")) {
        this.setVisible(false);
      }
      return;
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(this, "Launcher: Class not found\n" + toLaunch);
    }
  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    //String name = System.getProperty("launcher.name");
    String name = "launcher";
    if (args.length >= 1) {
      name = args[0];
    }
    new ApplicationLauncher(name);
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
